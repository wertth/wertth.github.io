<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.hc</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-24T16:05:37.848Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mhc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bisai</title>
    <link href="http://example.com/2021/05/24/bisai/"/>
    <id>http://example.com/2021/05/24/bisai/</id>
    <published>2021-05-24T15:37:46.000Z</published>
    <updated>2021-05-24T16:05:37.848Z</updated>
    
    <content type="html"><![CDATA[<iframe src="//player.bilibili.com/player.html?aid=758248082&bvid=BV1R64y1d7we&cid=343280520&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="900" height="700" allowfullscreen="true"> </iframe>]]></content>
    
    
      
      
    <summary type="html">

&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=758248082&amp;bvid=BV1R64y1d7we&amp;cid=343280520&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder</summary>
      
    
    
    
    
    <category term="show" scheme="http://example.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>fucking-algorithm</title>
    <link href="http://example.com/2021/03/21/fucking-algorithm/"/>
    <id>http://example.com/2021/03/21/fucking-algorithm/</id>
    <published>2021-03-21T15:16:50.000Z</published>
    <updated>2021-03-21T16:22:41.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>题目来自leetcode28.实现strStr()</p><p>实现 strStr() 函数。</p><p>给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。</p><p>示例 1:</p><p>输入: haystack = “hello”, needle = “ll”<br>输出: 2<br>示例 2:</p><p>输入: haystack = “aaaaa”, needle = “bba”<br>输出: -1<br>说明:</p><p>当 needle 是空字符串时，我们应当返回什么值呢？这是一个在面试中很好的问题。</p><p>对于本题而言，当 needle 是空字符串时我们应当返回 0 。这与C语言的 strstr() 以及 Java的 indexOf() 定义相符。</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/implement-strstr">https://leetcode-cn.com/problems/implement-strstr</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>暴力破解版本：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">strStr</span><span class="params">(String haystack, String needle)</span></span>&#123;</span><br><span class="line">       <span class="keyword">int</span> M,N;</span><br><span class="line">       M = needle.length();</span><br><span class="line">       N = haystack.length();</span><br><span class="line">       <span class="keyword">if</span>(M==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">if</span>(N&lt;M) <span class="keyword">return</span>  -<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">int</span> i;</span><br><span class="line">       <span class="keyword">for</span>(i =<span class="number">0</span> ; i &lt;= N-M; i++)&#123;   <span class="comment">//N-M表示最极端情况下，haystack串刚好在最后匹配到needle 再往后移动指针的话，长度首先就不能满足要求</span></span><br><span class="line">           <span class="keyword">int</span> j; <span class="comment">// j 作为待匹配串的临时指针，一点一点往待匹配串后面挪，失败了就回退</span></span><br><span class="line">           <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; M ; j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(needle.charAt(j) != haystack.charAt(i+j))&#123;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(j==M) <span class="keyword">return</span> i;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><p>此种方式对指针的挪动较频繁，且对于有大量重复字符的串来说，这种方式做了很多的无效匹配，空间复杂度为O（MN）</p><p>大量重复字符的情况大致可以分为以下两种情况：</p><ol><li><p>如 hackstack = “aaaacaaav”， needle=“aaav” 。 可以发现，一旦捕捉到c，也就是在needle中从未出现的字符，那么可以确定此前的串片段中不可能存在匹配needle的子字符串。也就是说，至少也得把指针挪到c之后来继续匹配，要是还继续一步步挪指针就会产生很多的无效操作。</p></li><li><p>如 hackstack = ”bbbbbbba“，needle=”bba“，在挪动指针时，我们并不会在半途中遇到needle中不存在的字符，但我们也没有必要从头再次对needle进行遍历，即我们可以在确认a之前的字符都是匹配的情况下，可以通过不回退已经匹配的子串指针，整体将指针向后移动</p></li></ol><h2 id="思路（kmp版本）："><a href="#思路（kmp版本）：" class="headerlink" title="思路（kmp版本）："></a>思路（kmp版本）：</h2><p>首先定义一个dp数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dp[j][c] &#x3D; next</span><br><span class="line">0 &lt;&#x3D; j &lt; M，代表当前的状态</span><br><span class="line">0 &lt;&#x3D; c &lt; 256，代表遇到的字符（ASCII 码）</span><br><span class="line">0 &lt;&#x3D; next &lt;&#x3D; M，代表下一个状态</span><br><span class="line"></span><br><span class="line">dp[4][&#39;A&#39;] &#x3D; 3 表示：</span><br><span class="line">当前是状态 4，如果遇到字符 A，</span><br><span class="line">pat 应该转移到状态 3</span><br><span class="line"></span><br><span class="line">dp[1][&#39;B&#39;] &#x3D; 2 表示：</span><br><span class="line">当前是状态 1，如果遇到字符 B，</span><br><span class="line">pat 应该转移到状态 2  </span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>注意：定义dp时，我们先明确几点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public int search(String txt) &#123;</span><br><span class="line">    int M &#x3D; pat.length();</span><br><span class="line">    int N &#x3D; txt.length();</span><br><span class="line">    &#x2F;&#x2F; pat 的初始态为 0</span><br><span class="line">    int j &#x3D; 0;</span><br><span class="line">    for (int i &#x3D; 0; i &lt; N; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F; 当前是状态 j，遇到字符 txt[i]，</span><br><span class="line">        &#x2F;&#x2F; pat 应该转移到哪个状态？</span><br><span class="line">        j &#x3D; dp[j][txt.charAt(i)];</span><br><span class="line">        &#x2F;&#x2F; 如果达到终止态，返回匹配开头的索引</span><br><span class="line">        if (j &#x3D;&#x3D; M) return i - M + 1;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F; 没到达终止态，匹配失败</span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>public class KMP {<br>    private int[][] dp;<br>    private String pat;</p><pre><code>public KMP(String pat) &#123;    this.pat = pat;    int M = pat.length();    // dp[状态][字符] = 下个状态    dp = new int[M][256];    // base case    dp[0][pat.charAt(0)] = 1;    // 影子状态 X 初始为 0    int X = 0;    // 构建状态转移图（稍改的更紧凑了）    for (int j = 1; j &lt; M; j++) &#123;        for (int c = 0; c &lt; 256; c++)            dp[j][c] = dp[X][c];        dp[j][pat.charAt(j)] = j + 1;        // 更新影子状态        X = dp[X][pat.charAt(j)];    &#125;&#125;public int search(String txt) &#123;    int M = pat.length();    int N = txt.length();    // pat 的初始态为 0    int j = 0;    for (int i = 0; i &lt; N; i++) &#123;        // 计算 pat 的下一个状态        j = dp[j][txt.charAt(i)];        // 到达终止态，返回结果        if (j == M) return i - M + 1;    &#125;    // 没到达终止态，匹配失败    return -1;&#125;</code></pre><p>}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h2&gt;&lt;p&gt;题目来自leetcode28.实现strStr()&lt;/p&gt;
&lt;p&gt;实现 strStr() 函数。&lt;/p&gt;
&lt;p&gt;给定</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="kmp" scheme="http://example.com/tags/kmp/"/>
    
    <category term="字符匹配" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E5%8C%B9%E9%85%8D/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>algorithm</title>
    <link href="http://example.com/2021/03/12/algorithm/"/>
    <id>http://example.com/2021/03/12/algorithm/</id>
    <published>2021-03-12T02:34:09.000Z</published>
    <updated>2021-03-12T06:35:20.391Z</updated>
    
    <content type="html"><![CDATA[<h2 id="day1-清华大学"><a href="#day1-清华大学" class="headerlink" title="day1 .清华大学"></a>day1 .清华大学</h2><h3 id="1-反序数"><a href="#1-反序数" class="headerlink" title="1.反序数"></a>1.反序数</h3><h4 id="Description："><a href="#Description：" class="headerlink" title="Description："></a>Description：</h4><p>设N是一个四位数，它的9倍恰好是其反序数（例如：1234的反序数是4321）<br>求N的值</p><h4 id="In-description"><a href="#In-description" class="headerlink" title="In_description:"></a>In_description:</h4><p>no input </p><h4 id="Out-description-the-output-must-contains-n-n-4-characters-if-there-is-a-set-of-input-data-you-must-add-a-‘-‘-between-every-set-of-data"><a href="#Out-description-the-output-must-contains-n-n-4-characters-if-there-is-a-set-of-input-data-you-must-add-a-‘-‘-between-every-set-of-data" class="headerlink" title="Out_description: the output must contains n(n=4) characters ,if there is a set of input data ,you must add a ‘  ‘ between   every set of data"></a>Out_description: the output must contains n(n=4) characters ,if there is a set of input data ,you must add a ‘  ‘ between   every set of data</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by 缪浩楚 on 2021/3/7.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//此程序从个位反序依次取数，构成反序数，判断相等即可</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1000</span>;i&lt;=<span class="number">9999</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> is_traverse = <span class="number">9</span>*i;</span><br><span class="line">        <span class="keyword">int</span> real_traverse = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">int</span> cur_num = i;</span><br><span class="line">        <span class="keyword">while</span>(cur_num)&#123;</span><br><span class="line">            real_traverse = real_traverse*<span class="number">10</span> + cur_num%<span class="number">10</span>;</span><br><span class="line">            cur_num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==real_traverse)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-对称平方数"><a href="#2-对称平方数" class="headerlink" title="2.对称平方数"></a>2.对称平方数</h3><h3 id="Description：-1"><a href="#Description：-1" class="headerlink" title="Description："></a>Description：</h3><p>打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2<em>2=4，11</em>11=121。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by 缪浩楚 on 2021/3/7.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//判断相等即可</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">256</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> square = i*i;</span><br><span class="line">        <span class="keyword">int</span> cur_num = square;</span><br><span class="line">        <span class="keyword">int</span> is_symmetry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(cur_num)&#123;</span><br><span class="line">            is_symmetry = is_symmetry*<span class="number">10</span> + cur_num%<span class="number">10</span>;</span><br><span class="line">            cur_num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_symmetry == square)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;square&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><h3 id="1-百鸡问题"><a href="#1-百鸡问题" class="headerlink" title="1.百鸡问题"></a>1.百鸡问题</h3><h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><p>用小于等于n元去买100只鸡，大鸡5元/只，小鸡3元/只,还有1/3元每只的一种小鸡，分别记为x只,y只,z只。编程求解x,y,z所有可能解。</p><h4 id="solution1："><a href="#solution1：" class="headerlink" title="solution1："></a>solution1：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by 缪浩楚 on 2021/3/10.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> money;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;money;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=<span class="number">100</span>;x++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>;y&lt;=<span class="number">100</span>;y++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> z=<span class="number">100</span>;z&gt;=<span class="number">0</span>;z--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x+y+z!=<span class="number">100</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>((<span class="number">5</span>*x+<span class="number">3</span>*y+z/<span class="number">3</span>+z%<span class="number">3</span>)&lt;=money)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;,y=&quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot;,z=&quot;</span>&lt;&lt;z&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="solution2："><a href="#solution2：" class="headerlink" title="solution2："></a>solution2：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//适当的减少了循环次数，复杂度降低</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> money ;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;money;</span><br><span class="line">    <span class="keyword">int</span> z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=<span class="number">100</span>;x++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>;y&lt;=(<span class="number">100</span>-x);y++)&#123;</span><br><span class="line">            z= <span class="number">100</span>-x-y;</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">5</span>*x+<span class="number">3</span>*y+z/<span class="number">3</span>+z%<span class="number">3</span>&lt;=money)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;,y=&quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&quot;,z=&quot;</span>&lt;&lt;z&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Old-Bill"><a href="#2-Old-Bill" class="headerlink" title="2.Old Bill"></a>2.Old Bill</h3><h4 id="Description-1"><a href="#Description-1" class="headerlink" title="Description:"></a>Description:</h4><p>Among grandfather’s papers a bill was found.   72 turkeys $<em>679</em>   The first and the last digits of the number that obviously represented the total price of those turkeys are replaced here by blanks (denoted _), for they are faded and are illegible. What are the two faded digits and what was the price of one turkey?   We want to write a program that solves a general version of the above problem.   N turkeys $<em>XYZ</em>   The total number of turkeys, N, is between 1 and 99, including both. The total price originally consisted of five digits, but we can see only the three digits in the middle. We assume that the first digit is nonzero, that the price of one turkeys is an integer number of dollars, and that all the turkeys cost the same price.   Given N, X, Y, and Z, write a program that guesses the two faded digits and the original price. In case that there is more than one candidate for the original price, the output should be the most expensive one. That is, the program is to report the two faded digits and the maximum price per turkey for the turkeys.</p><h4 id="In-description-1"><a href="#In-description-1" class="headerlink" title="In_description:"></a>In_description:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The first line of the input file contains an integer N (0&lt;N&lt;100), which represents the number of turkeys. In the following line, there are the three decimal digits X, Y, and Z., separated by a space, of the original price $_XYZ_.</span><br></pre></td></tr></table></figure><h4 id="out-description"><a href="#out-description" class="headerlink" title="out_description:"></a>out_description:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">For each case, output the two faded digits and the maximum price per turkey for the turkeys.</span><br></pre></td></tr></table></figure><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><h4 id="in-descripiton"><a href="#in-descripiton" class="headerlink" title="in_descripiton:"></a>in_descripiton:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">72</span><br><span class="line">6 7 9</span><br><span class="line">5</span><br><span class="line">2 3 7</span><br><span class="line">78</span><br><span class="line">0 0 5</span><br></pre></td></tr></table></figure><h4 id="out-description-1"><a href="#out-description-1" class="headerlink" title="out_description:"></a>out_description:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 2 511</span><br><span class="line">9 5 18475</span><br><span class="line">0</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by 缪浩楚 on 2021/3/11.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;N) <span class="comment">//while + cin 可循环运行多组输入数据，</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        <span class="keyword">for</span>(a=<span class="number">1</span>;a&lt;=<span class="number">9</span>;a++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(b=<span class="number">0</span>;b&lt;=<span class="number">9</span>;b++)&#123;</span><br><span class="line">                temp=<span class="number">0</span>;</span><br><span class="line">                temp=a*<span class="number">10000</span>+x*<span class="number">1000</span>+y*<span class="number">100</span>+z*<span class="number">10</span>+b;</span><br><span class="line">                <span class="keyword">if</span>(temp%N==<span class="number">0</span>)&#123;</span><br><span class="line">                    sum=temp;   <span class="comment">//这里也不用依次比较大小，只需不停的赋值，最后一次必定找到最大的</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;0&#x27;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="built_in">cout</span>&lt;&lt;sum/<span class="number">10000</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;sum%<span class="number">10</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;sum/N&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            a=<span class="number">1</span>;b=sum=temp=<span class="number">0</span>; <span class="comment">//为下一轮输入做准备，清理现场</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;day1-清华大学&quot;&gt;&lt;a href=&quot;#day1-清华大学&quot; class=&quot;headerlink&quot; title=&quot;day1 .清华大学&quot;&gt;&lt;/a&gt;day1 .清华大学&lt;/h2&gt;&lt;h3 id=&quot;1-反序数&quot;&gt;&lt;a href=&quot;#1-反序数&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="牛客_考研机试题" scheme="http://example.com/tags/%E7%89%9B%E5%AE%A2-%E8%80%83%E7%A0%94%E6%9C%BA%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
</feed>
